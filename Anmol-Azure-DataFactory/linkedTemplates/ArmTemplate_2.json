{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Anmol-Azure-DataFactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_SAP_Table_ZMMList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SAP",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapTableResource",
				"schema": [],
				"typeProperties": {
					"tableName": "ZMMLIST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CEPC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CEPC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_CEPC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_CEPC",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KNA1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "KNA1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_KNA1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_KNA1",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KNVV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "KNVV",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_KNVV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_KNVV",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MAKT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MAKT",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "SPRAS EQ 'E'",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_MAKT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_MAKT",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MARA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MARA",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_MARA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_MARA",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MARC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MARC",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_MARC",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_MARC",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/T151T')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "T151T",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "SPRAS EQ 'E'",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_T151T",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_T151T",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBAK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBAK_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBAK",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('ERDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBAK",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBAK",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBAK/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBAK",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBAP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBAP_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBAP",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('ERDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBAP",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBAP",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBAP/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBAP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBFA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBFA_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBFA",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('ERDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBFA",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBFA",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBFA/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBFA",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBRK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBRK_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBRK",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('ERDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBRK",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBRK",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBRK/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBRK",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBRP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBRP_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBRP",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('ERDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBRP",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBRP",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBRP/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBRP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBUK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VBUK",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_VBUK",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_VBUK",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBUK_AEDAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBUK_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBUK_AEDAT",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('AEDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBUK_AEDAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBUK_AEDAT",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBUK_AEDAT/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBUK_AEDAT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "VBUP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_VBUP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_VBUP",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VBUP_AEDAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Condition_start_date_empty",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('start_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_variable_start_date_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('start_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_Start_Date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_variable_start_date_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable_to_previous_start_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Condition_end_date_empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Condition_start_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@empty(variables('end_date'))",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set_end_date_variable_to_format_using_temp",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date_temp1",
										"value": {
											"value": "@formatDateTime(variables('end_date'),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign_temp_to_end_date",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set_end_date_variable_to_format_using_temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@variables('end_date_temp1')",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set_variable-end_date_to_previous_end_date",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "end_date",
										"value": {
											"value": "@formatDateTime(addDays(convertTimeZone(utcNow(),'UTC','India Standard Time'),-1),'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Increament_end_date_using_temp_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Condition_end_date_empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date_temp",
							"value": {
								"value": "@addDays(variables('end_date'),1)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Assign_increment_end_date_to_end_date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Increament_end_date_using_temp_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "end_date",
							"value": {
								"value": "@variables('end_date_temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Assign_increment_end_date_to_end_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(variables('start_date'),variables('end_date'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Condition_for_fiscal_month",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(int(formatDateTime(variables('start_date'),'MM')),4)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Subtract three from Month",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(int(formatDateTime(variables('start_date'),'yyyy'))),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),-3))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set Actuall Fiscal Year and Month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtract three from Month",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Subtracted year by 1 and add by  9 months",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "set_fiscalyear_month",
													"value": {
														"value": "@{formatDateTime(concat(string(add(int(formatDateTime(variables('start_date'),'yyyy')),-1)),'-',string(add(int(formatDateTime(variables('start_date'),'MM')),9))))}",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Set_actual_year_and_month",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "Subtracted year by 1 and add by  9 months",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "year_temp",
													"value": {
														"value": "@variables('set_fiscalyear_month')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Set Sink Path",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Condition_for_fiscal_month",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "year",
										"value": {
											"value": "@{concat(formatDateTime(variables('year_temp'),'yyyy/MM/'),formatDateTime(variables('start_date'),'dd'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Sink Path",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@concat('VBUP_',formatDateTime(variables('start_date'),'yyyyMMdd'),'.csv')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy SAP Table VBUP_AEDAT",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SapTableSource",
											"rfcTableOptions": {
												"value": "@{concat('AEDAT EQ ',variables('single_quote'), formatDateTime(variables('start_date'),'yyyyMMdd'), variables('single_quote'))}",
												"type": "Expression"
											},
											"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
											"partitionOption": "None",
											"sapDataColumnDelimiter": "^"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_SAP_Table_VBUP_AEDAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText_VBUP_AEDAT",
											"type": "DatasetReference",
											"parameters": {
												"filename": "@variables('filename')",
												"sink_path": "SAP/VBUP_AEDAT/@{variables('year')}",
												"blob": {
													"value": "@pipeline().globalParameters.blob",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Incremental Start Date using temp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy SAP Table VBUP_AEDAT",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date_temp",
										"value": {
											"value": "@addDays(variables('start_date'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Assign Incremental Start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Incremental Start Date using temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "start_date",
										"value": {
											"value": "@variables('start_date_temp')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"start_date": {
						"type": "String"
					},
					"end_date": {
						"type": "String"
					},
					"single_quote": {
						"type": "String",
						"defaultValue": "'"
					},
					"year": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					},
					"start_date_temp": {
						"type": "String"
					},
					"end_date_temp": {
						"type": "String"
					},
					"start_date_temp1": {
						"type": "String"
					},
					"end_date_temp1": {
						"type": "String"
					},
					"set_fiscalyear_month": {
						"type": "String"
					},
					"year_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Transactional"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZCUST_ADD_DETAIL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ZCUST_ADD_DETAIL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_ZCUST_ADD_DETAIL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_ZCUST_ADD_DETAIL",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZMMList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ZMMList",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapTableSource",
								"rfcTableOptions": "",
								"customRfcReadTableFunctionModule": "/SAPDS/RFC_READ_TABLE2",
								"partitionOption": "None",
								"sapDataColumnDelimiter": {
									"value": "^",
									"type": "Expression"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_Table_ZMMList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_ZMMList",
								"type": "DatasetReference",
								"parameters": {
									"blob": {
										"value": "@pipeline().globalParameters.blob",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SAP_Table_ZMMList')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load_CEPC",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CEPC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_KNA1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_CEPC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "KNA1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_KNVV",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_KNA1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "KNVV",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_MAKT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_KNVV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MAKT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_MARA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_MAKT",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MARA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_MARC",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_MARA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MARC",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_T151T",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_MARC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "T151T",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_VBUK",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_T151T",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VBUK",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_VBUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_VBUK",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "VBUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load_ZCUST_ADD_DETAIL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load_VBUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ZCUST_ADD_DETAIL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Master"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CEPC')]",
				"[concat(variables('factoryId'), '/pipelines/KNA1')]",
				"[concat(variables('factoryId'), '/pipelines/KNVV')]",
				"[concat(variables('factoryId'), '/pipelines/MAKT')]",
				"[concat(variables('factoryId'), '/pipelines/MARA')]",
				"[concat(variables('factoryId'), '/pipelines/MARC')]",
				"[concat(variables('factoryId'), '/pipelines/T151T')]",
				"[concat(variables('factoryId'), '/pipelines/VBUK')]",
				"[concat(variables('factoryId'), '/pipelines/VBUP')]",
				"[concat(variables('factoryId'), '/pipelines/ZCUST_ADD_DETAIL')]"
			]
		}
	]
}